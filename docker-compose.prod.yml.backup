# Production-ready PostgreSQL with pgAdmin
# Security-hardened configuration    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: "True"
      PGADMIN_CONFIG_CONSOLE_LOG_LEVEL: 30
      PGADMIN_CONFIG_SESSION_COOKIE_SECURE: "True"
      PGADMIN_CONFIG_SESSION_COOKIE_HTTPONLY: "True"alth checks and resource limits

services:
  database:
    image: "postgres:16-alpine"
    container_name: postgres_primary
    restart: unless-stopped
    
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    
    ports:
      - "127.0.0.1:${POSTGRES_PORT:-5432}:5432"
    
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_INITDB_ARGS: ${POSTGRES_INITDB_ARGS}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD}
      POSTGRES_SHARED_BUFFERS: ${POSTGRES_SHARED_BUFFERS}
      POSTGRES_EFFECTIVE_CACHE_SIZE: ${POSTGRES_EFFECTIVE_CACHE_SIZE}
      POSTGRES_MAINTENANCE_WORK_MEM: ${POSTGRES_MAINTENANCE_WORK_MEM}
      POSTGRES_CHECKPOINT_COMPLETION_TARGET: ${POSTGRES_CHECKPOINT_COMPLETION_TARGET}
      POSTGRES_WAL_BUFFERS: ${POSTGRES_WAL_BUFFERS}
      POSTGRES_DEFAULT_STATISTICS_TARGET: ${POSTGRES_DEFAULT_STATISTICS_TARGET}
    
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./config/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
      - ./init-scripts:/docker-entrypoint-initdb.d:ro
      - ./backups:/backups
    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres_admin -d production_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    
    labels:
      - "app=postgresql"
      - "environment=production"
      - "backup=required"
    
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  pgadmin:
    image: dpage/pgadmin4:8.10
    container_name: pgadmin_web
    restart: unless-stopped
    
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    
    ports:
      - "127.0.0.1:${PGADMIN_LISTEN_PORT:-5050}:80"
    
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: "True"
      PGADMIN_CONFIG_LOGIN_BANNER: "Authorized Access Only"
      PGADMIN_CONFIG_CONSOLE_LOG_LEVEL: 30
      PGADMIN_CONFIG_SESSION_COOKIE_SECURE: "True"
      PGADMIN_CONFIG_SESSION_COOKIE_HTTPONLY: "True"
      
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./config/pgadmin_servers.json:/pgadmin4/servers.json:ro
    
    depends_on:
      database:
        condition: service_healthy
    
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/misc/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    
    labels:
      - "app=pgadmin"
      - "environment=production"
    
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

volumes:
  postgres_data:
    driver: local
    name: postgres_production_data
  pgadmin_data:
    driver: local
    name: pgadmin_production_data
